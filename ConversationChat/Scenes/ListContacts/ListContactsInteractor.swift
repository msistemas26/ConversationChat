//
//  ListContactsInteractor.swift
//  ConversationChat
//
//  Created by Raul Mantilla on 20/10/18.
//  Copyright (c) 2018 Raul Mantilla. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ListContactsBusinessLogic
{
    func fetchContacts()
    func createChatRoom(withContactIndex index: Int)
}

protocol ListContactsDataStore
{
    var contacts: [Contact] { get set }
    var selectedContact: Contact? { get set }
    var createdChatRoom: ChatRoom? { get set }
}

class ListContactsInteractor: ListContactsBusinessLogic, ListContactsDataStore
{
    var presenter: ListContactsPresentationLogic?
    var worker: ListContactsWorker?
    
    var contacts: [Contact] = []
    var selectedContact: Contact?
    var createdChatRoom: ChatRoom?
    
    // MARK: Do something
    
    func fetchContacts()
    {
        worker = ListContactsWorker()
        
        worker?.fetchContacts{ (contacts) in
            self.contacts = contacts
            let response = ListContacts.FetchContacts.Response(contacts: contacts)
            self.presenter?.presentContacts(response: response)
        }
    }
    
    func createChatRoom(withContactIndex index: Int)
    {
        worker = ListContactsWorker()
        
        let selectedContact = self.contacts[index]
        worker?.createChatRoom(withContacts: [selectedContact]){ (chatRoom) in
            self.createdChatRoom = chatRoom
            let response = ListContacts.CreateChatRoom.Response(chatRoom: chatRoom)
            self.presenter?.presentCreatedChatRoom(response: response)
        }
    }
}
