//
//  ConversationRoomInteractor.swift
//  ConversationChat
//
//  Created by Raul Humberto Mantilla Assia on 10/23/18.
//  Copyright (c) 2018 Raul Mantilla. All rights reserved.
//
//  This file was generated by the Clean Swift HELM Xcode Templates
//  https://github.com/HelmMobile/clean-swift-templates

protocol ConversationRoomBusinessLogic
{
    func fetchMessages(request: ConversationRoom.FetchMessages.Request)
    func sendMessage(request: ConversationRoom.SendMessage.Request)
}

protocol ConversationRoomDataStore
{
    var messages: [RealmChatRoomConversation] { get set }
    var title: String? { get set }
}

class ConversationRoomInteractor: ConversationRoomBusinessLogic, ConversationRoomDataStore
{
    var title: String?
    var presenter: ConversationRoomPresentationLogic?
    var worker: ConversationRoomWorker?
    var messages: [RealmChatRoomConversation] = []
    
    // MARK:
    
    func fetchMessages(request: ConversationRoom.FetchMessages.Request)
    {
        worker = ConversationRoomWorker()
        
        worker?.fetchMessages{ (messages) in
            self.messages = messages
            let response = ConversationRoom.FetchMessages.Response(messages: messages)
            self.presenter?.presentMessages(response: response)
        }
    }
    
    func sendMessage(request: ConversationRoom.SendMessage.Request)
    {
        let message = request.message
        
        worker = ConversationRoomWorker()
        
        worker?.sendMessage(message: message) { (response)  in
            let message = response.message
            self.messages.append(message)
            let response = ConversationRoom.SendMessage.Response(message: message)
            self.presenter?.presentMessage(response: response)
        }
    }
}
