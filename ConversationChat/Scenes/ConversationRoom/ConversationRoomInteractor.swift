//
//  ConversationRoomInteractor.swift
//  ConversationChat
//
//  Created by Raul Humberto Mantilla Assia on 10/23/18.
//  Copyright (c) 2018 Raul Mantilla. All rights reserved.
//
//  This file was generated by the Clean Swift HELM Xcode Templates
//  https://github.com/HelmMobile/clean-swift-templates

protocol ConversationRoomBusinessLogic
{
    func fetchMessages()
    func sendMessage(request: ConversationRoom.SendMessage.Request)
    var chatRoomTitle: String { get }
}

protocol ConversationRoomDataStore
{
    var messages: [Message] { get set }
    var chatRoom: ChatRoom! { get set }
}

class ConversationRoomInteractor: ConversationRoomBusinessLogic, ConversationRoomDataStore
{
    var presenter: ConversationRoomPresentationLogic?
    var worker: ConversationRoomWorker?
    var messages: [Message] = []
    var chatRoom: ChatRoom!
    
    var chatRoomTitle: String {
        return chatRoom.name
    }
    
    // MARK:
    
    func fetchMessages()
    {
        worker = ConversationRoomWorker()
        worker?.fetchMessages(withChatRoom: chatRoom) { (messages) in
            self.messages = messages
            let response = ConversationRoom.FetchMessages.Response(messages: messages)
            self.presenter?.presentMessages(response: response)
        }
    }
    
    func sendMessage(request: ConversationRoom.SendMessage.Request)
    {
        let message = request.message
        
        worker = ConversationRoomWorker()
        
        worker?.sendMessage(withChatRoom: chatRoom!, message: message) { (response)  in
            let message = response.message
            self.messages.append(message)
            let response = ConversationRoom.SendMessage.Response(message: message)
            self.presenter?.presentMessage(response: response)
        }
    }
}
